{"ast":null,"code":"var _jsxFileName = \"/Users/moomin/Front-end/react/todoappRef/src/components/ui/Modal.js\",\n  _s = $RefreshSig$();\nimport { useImperativeHandle, useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport modalStyle from \"./Modal.module.css\";\n\n// alertRef만 받아옴\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Alert({\n  alertRef\n}) {\n  _s();\n  const modalRef = useRef();\n  const [message, setMessage] = useState([]);\n  const onClickCloseButtonHandler = () => {\n    modalRef.current.close();\n  };\n\n  // state에 alert에 보여줄 메세지를 전달한다.\n  useImperativeHandle(alertRef, () => {\n    return {\n      show(messages) {\n        modalRef.current.showModal();\n        setMessage(messages);\n      },\n      close() {\n        modalRef.current.close();\n        setMessage([]);\n      }\n    };\n  });\n\n  // 프래그먼트로 리턴\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/createPortal(/*#__PURE__*/_jsxDEV(\"dialog\", {\n      className: modalStyle.modal,\n      ref: modalRef,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: modalStyle.modalTitle,\n        onClick: onClickCloseButtonHandler,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: modalStyle.modalMessages,\n        children: message.map(msg => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, msg, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), document.getElementById(\"modals\"))\n  }, void 0, false);\n}\n_s(Alert, \"kY2FkPRsegR88H6ALC9PviWg5vM=\");\n_c = Alert;\nvar _c;\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"names":["useImperativeHandle","useRef","useState","createPortal","modalStyle","jsxDEV","_jsxDEV","Fragment","_Fragment","Alert","alertRef","_s","modalRef","message","setMessage","onClickCloseButtonHandler","current","close","show","messages","showModal","children","className","modal","ref","modalTitle","onClick","fileName","_jsxFileName","lineNumber","columnNumber","modalMessages","map","msg","document","getElementById","_c","$RefreshReg$"],"sources":["/Users/moomin/Front-end/react/todoappRef/src/components/ui/Modal.js"],"sourcesContent":["import { useImperativeHandle, useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport modalStyle from \"./Modal.module.css\";\n\n// alertRef만 받아옴\nexport function Alert({ alertRef }) {\n  const modalRef = useRef();\n\n  const [message, setMessage] = useState([]);\n\n  const onClickCloseButtonHandler = () => {\n    modalRef.current.close();\n  };\n\n  // state에 alert에 보여줄 메세지를 전달한다.\n  useImperativeHandle(alertRef, () => {\n    return {\n      show(messages) {\n        modalRef.current.showModal();\n        setMessage(messages);\n      },\n      close() {\n        modalRef.current.close();\n        setMessage([]);\n      },\n    };\n  });\n\n  // 프래그먼트로 리턴\n  return (\n    <>\n      {createPortal(\n        <dialog className={modalStyle.modal} ref={modalRef}>\n          <section\n            className={modalStyle.modalTitle}\n            onClick={onClickCloseButtonHandler}\n          >\n            X\n          </section>\n          <ul className={modalStyle.modalMessages}>\n            {message.map((msg) => (\n              <li key={msg}>{msg}</li>\n            ))}\n          </ul>\n        </dialog>,\n        document.getElementById(\"modals\")\n      )}\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,mBAAmB,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC7D,SAASC,YAAY,QAAQ,WAAW;AACxC,OAAOC,UAAU,MAAM,oBAAoB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,OAAO,SAASC,KAAKA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGX,MAAM,CAAC,CAAC;EAEzB,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,yBAAyB,GAAGA,CAAA,KAAM;IACtCH,QAAQ,CAACI,OAAO,CAACC,KAAK,CAAC,CAAC;EAC1B,CAAC;;EAED;EACAjB,mBAAmB,CAACU,QAAQ,EAAE,MAAM;IAClC,OAAO;MACLQ,IAAIA,CAACC,QAAQ,EAAE;QACbP,QAAQ,CAACI,OAAO,CAACI,SAAS,CAAC,CAAC;QAC5BN,UAAU,CAACK,QAAQ,CAAC;MACtB,CAAC;MACDF,KAAKA,CAAA,EAAG;QACNL,QAAQ,CAACI,OAAO,CAACC,KAAK,CAAC,CAAC;QACxBH,UAAU,CAAC,EAAE,CAAC;MAChB;IACF,CAAC;EACH,CAAC,CAAC;;EAEF;EACA,oBACER,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACGlB,YAAY,cACXG,OAAA;MAAQgB,SAAS,EAAElB,UAAU,CAACmB,KAAM;MAACC,GAAG,EAAEZ,QAAS;MAAAS,QAAA,gBACjDf,OAAA;QACEgB,SAAS,EAAElB,UAAU,CAACqB,UAAW;QACjCC,OAAO,EAAEX,yBAA0B;QAAAM,QAAA,EACpC;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACVxB,OAAA;QAAIgB,SAAS,EAAElB,UAAU,CAAC2B,aAAc;QAAAV,QAAA,EACrCR,OAAO,CAACmB,GAAG,CAAEC,GAAG,iBACf3B,OAAA;UAAAe,QAAA,EAAeY;QAAG,GAATA,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACTI,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAClC;EAAC,gBACD,CAAC;AAEP;AAACxB,EAAA,CA5CeF,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}