{"ast":null,"code":"var _jsxFileName = \"/Users/moomin/Front-end/react/todoapp/src/components/ui/Modal.js\",\n  _s = $RefreshSig$();\nimport { useImperativeHandle, useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\n\n// alertRef만 받아옴\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Alert({\n  alertRef\n}) {\n  _s();\n  const modalRef = useRef();\n  const [message, setMessage] = useState([]);\n\n  // state에 alert에 보여줄 메세지를 전달한다.\n  useImperativeHandle(alertRef, () => {\n    return {\n      show(mesages) {\n        modalRef.current.showModal();\n        setMessage(mesages);\n      },\n      close() {\n        modalRef.current.close();\n        setMessage([]);\n      }\n    };\n  });\n  // 프래그먼트로 리턴\n  /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/createPortal(/*#__PURE__*/_jsxDEV(\"dialog\", {\n      ref: modalRef,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: message.map(msg => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, msg, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this))\n  }, void 0, false);\n}\n_s(Alert, \"kY2FkPRsegR88H6ALC9PviWg5vM=\");\n_c = Alert;\nvar _c;\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"names":["useImperativeHandle","useRef","useState","createPortal","jsxDEV","_jsxDEV","Fragment","_Fragment","Alert","alertRef","_s","modalRef","message","setMessage","show","mesages","current","showModal","close","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","_c","$RefreshReg$"],"sources":["/Users/moomin/Front-end/react/todoapp/src/components/ui/Modal.js"],"sourcesContent":["import { useImperativeHandle, useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\n\n// alertRef만 받아옴\nexport function Alert({ alertRef }) {\n  const modalRef = useRef();\n\n  const [message, setMessage] = useState([]);\n\n  // state에 alert에 보여줄 메세지를 전달한다.\n  useImperativeHandle(alertRef, () => {\n    return {\n      show(mesages) {\n        modalRef.current.showModal();\n        setMessage(mesages);\n      },\n      close() {\n        modalRef.current.close();\n        setMessage([]);\n      },\n    };\n  });\n  // 프래그먼트로 리턴\n  <>\n    {createPortal(\n      <dialog ref={modalRef}>\n        <section>X</section>\n        <ul>\n          {message.map((msg) => (\n            <li key={msg}>{msg}</li>\n          ))}\n        </ul>\n      </dialog>\n    )}\n  </>;\n}\n"],"mappings":";;AAAA,SAASA,mBAAmB,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC7D,SAASC,YAAY,QAAQ,WAAW;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,OAAO,SAASC,KAAKA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGV,MAAM,CAAC,CAAC;EAEzB,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAF,mBAAmB,CAACS,QAAQ,EAAE,MAAM;IAClC,OAAO;MACLK,IAAIA,CAACC,OAAO,EAAE;QACZJ,QAAQ,CAACK,OAAO,CAACC,SAAS,CAAC,CAAC;QAC5BJ,UAAU,CAACE,OAAO,CAAC;MACrB,CAAC;MACDG,KAAKA,CAAA,EAAG;QACNP,QAAQ,CAACK,OAAO,CAACE,KAAK,CAAC,CAAC;QACxBL,UAAU,CAAC,EAAE,CAAC;MAChB;IACF,CAAC;EACH,CAAC,CAAC;EACF;EACA,aAAAR,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACGhB,YAAY,cACXE,OAAA;MAAQe,GAAG,EAAET,QAAS;MAAAQ,QAAA,gBACpBd,OAAA;QAAAc,QAAA,EAAS;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACpBnB,OAAA;QAAAc,QAAA,EACGP,OAAO,CAACa,GAAG,CAAEC,GAAG,iBACfrB,OAAA;UAAAc,QAAA,EAAeO;QAAG,GAATA,GAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACV;EAAC,gBACD,CAAC;AACL;AAACd,EAAA,CA/BeF,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}