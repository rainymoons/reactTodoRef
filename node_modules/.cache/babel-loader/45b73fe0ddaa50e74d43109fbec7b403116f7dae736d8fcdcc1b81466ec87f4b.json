{"ast":null,"code":"var _jsxFileName = \"/Users/moomin/Front-end/react/todoappRef/src/components/todo/Todo.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport todoStyle from \"./Todo.module.css\";\nimport { TodoContext } from \"./contexts/TodoContext\";\n\n//onClickDoneHandler이 앱에 있는 스테이트를 바꾸는 것\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo({\n  todo\n}) {\n  _s();\n  // todo는 객체리터럴이므로 분해\n  const {\n    id,\n    isDone,\n    task,\n    dueDate\n  } = todo;\n\n  // todo의 완료상태 여부에 따라 css 다르게 적용\n  const itemStyle = {\n    color: isDone ? \"#CCC\" : \"#333\",\n    textDecoration: isDone ? \"line-through\" : \"none\"\n  };\n  const {\n    contextDone\n  } = useContext(TodoContext);\n  const onClickDoneHandler = event => {\n    // TodoContext에 있는 contextDone 함수 호출\n    contextDone(event);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: todoStyle.todoItem,\n    style: itemStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: todoStyle.inputWrapper,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: id,\n        type: \"checkbox\",\n        onChange: onClickDoneHandler,\n        checked: isDone ? \"checked\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: todoStyle.todoName,\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: dueDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Todo, \"d6CXiPMlyaRZLgqw9wFulPEsZEA=\");\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useContext","todoStyle","TodoContext","jsxDEV","_jsxDEV","Todo","todo","_s","id","isDone","task","dueDate","itemStyle","color","textDecoration","contextDone","onClickDoneHandler","event","className","todoItem","style","children","inputWrapper","defaultValue","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","todoName","_c","$RefreshReg$"],"sources":["/Users/moomin/Front-end/react/todoappRef/src/components/todo/Todo.js"],"sourcesContent":["import { useContext } from \"react\";\nimport todoStyle from \"./Todo.module.css\";\nimport { TodoContext } from \"./contexts/TodoContext\";\n\n//onClickDoneHandler이 앱에 있는 스테이트를 바꾸는 것\nexport default function Todo({ todo }) {\n  // todo는 객체리터럴이므로 분해\n  const { id, isDone, task, dueDate } = todo;\n\n  // todo의 완료상태 여부에 따라 css 다르게 적용\n  const itemStyle = {\n    color: isDone ? \"#CCC\" : \"#333\",\n    textDecoration: isDone ? \"line-through\" : \"none\",\n  };\n\n  const { contextDone } = useContext(TodoContext);\n  const onClickDoneHandler = (event) => {\n    // TodoContext에 있는 contextDone 함수 호출\n    contextDone(event);\n  };\n\n  return (\n    <li className={todoStyle.todoItem} style={itemStyle}>\n      <div className={todoStyle.inputWrapper}>\n        <input\n          defaultValue={id}\n          type=\"checkbox\"\n          onChange={onClickDoneHandler}\n          checked={isDone ? \"checked\" : \"\"}\n        />\n      </div>\n      <div className={todoStyle.todoName}>{task}</div>\n      <div>{dueDate}</div>\n    </li>\n  );\n}\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,WAAW,QAAQ,wBAAwB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACrC;EACA,MAAM;IAAEC,EAAE;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGL,IAAI;;EAE1C;EACA,MAAMM,SAAS,GAAG;IAChBC,KAAK,EAAEJ,MAAM,GAAG,MAAM,GAAG,MAAM;IAC/BK,cAAc,EAAEL,MAAM,GAAG,cAAc,GAAG;EAC5C,CAAC;EAED,MAAM;IAAEM;EAAY,CAAC,GAAGf,UAAU,CAACE,WAAW,CAAC;EAC/C,MAAMc,kBAAkB,GAAIC,KAAK,IAAK;IACpC;IACAF,WAAW,CAACE,KAAK,CAAC;EACpB,CAAC;EAED,oBACEb,OAAA;IAAIc,SAAS,EAAEjB,SAAS,CAACkB,QAAS;IAACC,KAAK,EAAER,SAAU;IAAAS,QAAA,gBAClDjB,OAAA;MAAKc,SAAS,EAAEjB,SAAS,CAACqB,YAAa;MAAAD,QAAA,eACrCjB,OAAA;QACEmB,YAAY,EAAEf,EAAG;QACjBgB,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAET,kBAAmB;QAC7BU,OAAO,EAAEjB,MAAM,GAAG,SAAS,GAAG;MAAG;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1B,OAAA;MAAKc,SAAS,EAAEjB,SAAS,CAAC8B,QAAS;MAAAV,QAAA,EAAEX;IAAI;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChD1B,OAAA;MAAAiB,QAAA,EAAMV;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAET;AAACvB,EAAA,CA9BuBF,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}