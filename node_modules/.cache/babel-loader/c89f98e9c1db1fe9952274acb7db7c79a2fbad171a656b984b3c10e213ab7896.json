{"ast":null,"code":"var _jsxFileName = \"/Users/moomin/Front-end/react/todoapp/src/components/todo/AddTodo.js\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport addTodoStyle from \"./AddTodo.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddTodo({\n  setTodoList\n}) {\n  _s();\n  // ref부터 만든다.\n  const taskRef = useRef();\n  const dueDateRef = useRef();\n\n  // task 내용과 duedate내용을 가져와서 setTodoList에 추가\n  const onClickAddButtonHandler = () => {\n    const task = taskRef.current.value;\n    const dueDate = dueDateRef.current.value;\n\n    // Modal을 위한 조건\n    if (!task || !dueDate) {\n      alert(\"내용을 입력해야 합니다.\");\n      return;\n    }\n\n    // 값을 가져와서 setTodoList 호출. -> 새롭게 추가한것만 배열에 넣어야 함.\n    //prevTodoList최신의 스테이트 -> 배열로 만들어야함.\n    // 객체리터럴로 넣어줌. 그렇게 만들었으니까.\n    // 앞에 넣어주면 배열의 가장 앞에 들어감. 반대의 경우 제일 밑.\n    setTodoList(prevTodoList => [{\n      id: prevTodoList.length,\n      // 0-1-2-3-4-5 순으로 증가하므로 length로 준다.\n      isDone: false,\n      task,\n      // value가 task로 같으므로 생략 가능\n      dueDate // 마찬가지로 생략 가능\n    }, ...prevTodoList]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: addTodoStyle.addTodoWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: addTodoStyle.addTodoLabel,\n      htmlFor: \"task\",\n      children: \"Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: addTodoStyle.addTodoInput,\n      type: \"text\",\n      id: \"task\",\n      placeholder: \"Input Task\",\n      ref: taskRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: addTodoStyle.addTodoLabel,\n      htmlFor: \"due-date\",\n      children: \"Due Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"due-date\",\n      ref: dueDateRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: addTodoStyle.addTodoButton,\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTodo, \"Knidd2eCEIsVhGb+qH1tzyMkj/Q=\");\n_c = AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["useRef","addTodoStyle","jsxDEV","_jsxDEV","AddTodo","setTodoList","_s","taskRef","dueDateRef","onClickAddButtonHandler","task","current","value","dueDate","alert","prevTodoList","id","length","isDone","className","addTodoWrapper","children","addTodoLabel","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","addTodoInput","type","placeholder","ref","addTodoButton","_c","$RefreshReg$"],"sources":["/Users/moomin/Front-end/react/todoapp/src/components/todo/AddTodo.js"],"sourcesContent":["import { useRef } from \"react\";\nimport addTodoStyle from \"./AddTodo.module.css\";\n\nexport default function AddTodo({ setTodoList }) {\n  // ref부터 만든다.\n  const taskRef = useRef();\n  const dueDateRef = useRef();\n\n  // task 내용과 duedate내용을 가져와서 setTodoList에 추가\n  const onClickAddButtonHandler = () => {\n    const task = taskRef.current.value;\n    const dueDate = dueDateRef.current.value;\n\n    // Modal을 위한 조건\n    if (!task || !dueDate) {\n      alert(\"내용을 입력해야 합니다.\");\n      return;\n    }\n\n    // 값을 가져와서 setTodoList 호출. -> 새롭게 추가한것만 배열에 넣어야 함.\n    //prevTodoList최신의 스테이트 -> 배열로 만들어야함.\n    // 객체리터럴로 넣어줌. 그렇게 만들었으니까.\n    // 앞에 넣어주면 배열의 가장 앞에 들어감. 반대의 경우 제일 밑.\n    setTodoList((prevTodoList) => [\n      {\n        id: prevTodoList.length, // 0-1-2-3-4-5 순으로 증가하므로 length로 준다.\n        isDone: false,\n        task, // value가 task로 같으므로 생략 가능\n        dueDate, // 마찬가지로 생략 가능\n      },\n      ...prevTodoList,\n    ]);\n  };\n\n  return (\n    <div className={addTodoStyle.addTodoWrapper}>\n      <label className={addTodoStyle.addTodoLabel} htmlFor=\"task\">\n        Task\n      </label>\n      <input\n        className={addTodoStyle.addTodoInput}\n        type=\"text\"\n        id=\"task\"\n        placeholder=\"Input Task\"\n        ref={taskRef}\n      />\n\n      <label className={addTodoStyle.addTodoLabel} htmlFor=\"due-date\">\n        Due Date\n      </label>\n      <input type=\"date\" id=\"due-date\" ref={dueDateRef} />\n\n      <button className={addTodoStyle.addTodoButton}>등록</button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAOC,YAAY,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,OAAOA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC/C;EACA,MAAMC,OAAO,GAAGP,MAAM,CAAC,CAAC;EACxB,MAAMQ,UAAU,GAAGR,MAAM,CAAC,CAAC;;EAE3B;EACA,MAAMS,uBAAuB,GAAGA,CAAA,KAAM;IACpC,MAAMC,IAAI,GAAGH,OAAO,CAACI,OAAO,CAACC,KAAK;IAClC,MAAMC,OAAO,GAAGL,UAAU,CAACG,OAAO,CAACC,KAAK;;IAExC;IACA,IAAI,CAACF,IAAI,IAAI,CAACG,OAAO,EAAE;MACrBC,KAAK,CAAC,eAAe,CAAC;MACtB;IACF;;IAEA;IACA;IACA;IACA;IACAT,WAAW,CAAEU,YAAY,IAAK,CAC5B;MACEC,EAAE,EAAED,YAAY,CAACE,MAAM;MAAE;MACzBC,MAAM,EAAE,KAAK;MACbR,IAAI;MAAE;MACNG,OAAO,CAAE;IACX,CAAC,EACD,GAAGE,YAAY,CAChB,CAAC;EACJ,CAAC;EAED,oBACEZ,OAAA;IAAKgB,SAAS,EAAElB,YAAY,CAACmB,cAAe;IAAAC,QAAA,gBAC1ClB,OAAA;MAAOgB,SAAS,EAAElB,YAAY,CAACqB,YAAa;MAACC,OAAO,EAAC,MAAM;MAAAF,QAAA,EAAC;IAE5D;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRxB,OAAA;MACEgB,SAAS,EAAElB,YAAY,CAAC2B,YAAa;MACrCC,IAAI,EAAC,MAAM;MACXb,EAAE,EAAC,MAAM;MACTc,WAAW,EAAC,YAAY;MACxBC,GAAG,EAAExB;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eAEFxB,OAAA;MAAOgB,SAAS,EAAElB,YAAY,CAACqB,YAAa;MAACC,OAAO,EAAC,UAAU;MAAAF,QAAA,EAAC;IAEhE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRxB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACb,EAAE,EAAC,UAAU;MAACe,GAAG,EAAEvB;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEpDxB,OAAA;MAAQgB,SAAS,EAAElB,YAAY,CAAC+B,aAAc;MAAAX,QAAA,EAAC;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAACrB,EAAA,CApDuBF,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}